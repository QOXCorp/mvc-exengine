# MVC-ExEngine Default Database Configuration File
# You can create multiple database configuration files, just store in this directory, you can
# use them in any controller by using `$this->loadDB`:
#
#   $this->loadDb(); // (this will load by default this config (`default.yml`) file)
#   $this->loadDb("config_file"); // (this will load the `config_file.yml` file)
#
# Or in any DBO model by setting the `$DBC` reserved variable:
#
#   ...
#   var $DBC = 'config_file'; // (this will load the `config_file.yml` file)
#   ...
#
# The supported types are:
#
#   mysqli for MySQL, sqlite for SQLite and mongodb for MongoDB.
#
# Important: The uft8mode is only for MySQL databases.
#
# SQLite database are stored in safe_storage/sqlite, the system will create db if not existant, config example:
#
# type: "sqlite"
# host: "mydb.sqlite"
#
# Internally MVC-ExEngine will use ExEngine Database Manager for MySQL and SQLite but not for MongoDB, so if you opt for
# MongoDB you cannot use $this->loadDb() and its functions, you will be limited to the DBO Models (but that is not bad).
# Why?, because EE DB Manager is only for SQL-based databases.
#
# Also, for MongoDB you will need the MongoDB PHP extension, well also for MySQL and SQLite (lol), the configuration for
# MongoDB is a little bit different, you just need to write the MongoDB connection URL as the host and set type to
# "mongodb".
#
# Here is an example of MongoDB connection
#
#   type: "mongodb"
#   host: "mongodb://myuser:mypassword@myserverhost/myauthdatabase"
#
# No auth database?
#
#   type: "mongodb"
#   host: "mongodb://localhost"
#
# No default database?, set enabled to false and default database will not be checked at application init. (this param only
# affects the default database, on any other configuration file will be ommited.

check:    false
type:     "mysqli"
host:     "localhost"
user:     "root"
passwd:   "root"
db:       "mydatabaseschema"
utf8mode: "true"